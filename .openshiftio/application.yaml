apiVersion: v1
kind: Template
metadata:
  name: launchpad-builder
  annotations:
    description: This template creates a Build Configuration using an S2I builder.
    tags: instant-app
parameters:
  - name: SUFFIX_NAME
    description: The suffix name for the template objects
    displayName: Suffix name
    value: ''
  - name: RELEASE_VERSION
    description: The release version number of application
    displayName: Release version
    value: 2.0.2
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: master
    required: true
  - name: GITHUB_WEBHOOK_SECRET
    description: A secret string used to configure the GitHub webhook.
    displayName: GitHub Webhook Secret
    required: true
    from: '[a-zA-Z0-9]{40}'
    generate: expression
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: 'nodejs-health-check${SUFFIX_NAME}'
      labels:
        version: '${RELEASE_VERSION}'
    spec: {}
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: runtime
    spec:
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: 'registry.access.redhat.com/rhoar-nodejs/nodejs-10:latest'
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: 'nodejs-health-check-s2i${SUFFIX_NAME}'
      labels:
        version: '${RELEASE_VERSION}'
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: 'nodejs-health-check${SUFFIX_NAME}:${RELEASE_VERSION}'
      postCommit: {}
      resources: {}
      source:
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
          ref: '${SOURCE_REPOSITORY_REF}'
        type: Git
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'runtime:latest'
          incremental: true
      triggers:
        - github:
            secret: '${GITHUB_WEBHOOK_SECRET}'
          type: GitHub
        - type: ConfigChange
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
      type: ClusterIP
      selector:
        project: nodejs-health-check
        provider: nodeshift
    metadata:
      name: 'nodejs-health-check${SUFFIX_NAME}'
      labels:
        provider: nodeshift
        expose: 'true'
        project: nodejs-health-check
        version: '${RELEASE_VERSION}'
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: 'nodejs-health-check${SUFFIX_NAME}'
      labels:
        app: nodejs-health-check
        provider: nodeshift
        project: nodejs-health-check
        version: '${RELEASE_VERSION}'
    spec:
      template:
        spec:
          containers:
            - readinessProbe:
                httpGet:
                  path: /api/health/readiness
                  port: 8080
                  scheme: HTTP
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 1
              livenessProbe:
                httpGet:
                  path: /api/health/liveness
                  port: 8080
                  scheme: HTTP
                failureThreshold: 2
                initialDelaySeconds: 60
                periodSeconds: 3
                successThreshold: 1
                timeoutSeconds: 1
              image: ''
              name: nodejs-health-check
              securityContext:
                privileged: false
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
        metadata:
          labels:
            app: nodejs-health-check
            project: nodejs-health-check
            provider: nodeshift
            version: '${RELEASE_VERSION}'
      replicas: 1
      selector:
        app: nodejs-health-check
        project: nodejs-health-check
        provider: nodeshift
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - nodejs-health-check
            from:
              kind: ImageStreamTag
              name: 'nodejs-health-check${SUFFIX_NAME}:${RELEASE_VERSION}'
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        project: nodejs-health-check
        provider: nodeshift
        version: '${RELEASE_VERSION}'
      name: 'nodejs-health-check${SUFFIX_NAME}'
    spec:
      port:
        targetPort: 8080
      to:
        kind: Service
        name: 'nodejs-health-check${SUFFIX_NAME}'
